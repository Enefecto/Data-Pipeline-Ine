services:
  # PASO 1: Scraper - Descarga datos raw del INE
  scraper:
    build: .
    container_name: ine-scraper
    command: python steps/step1_scraper.py
    volumes:
      - ./outputs:/app/outputs
      - ./dictionary:/app/dictionary
      - ./steps:/app/steps
      - ./config.py:/app/config.py
    environment:
      - PYTHONUNBUFFERED=1
      # Pipeline
      - PIPELINE_STAGE=raw
      # Configuración de concurrencia
      - MAX_CONCURRENT_BROWSERS=4
      - DOWNLOAD_TIMEOUT=60
      - DELAY_BETWEEN_DOWNLOADS=1.0
      # Configuración de archivos
      - CATALOG_PATH=/app/dictionary/ine_catalog.json
      - OUTPUT_DIR=/app/outputs
      - SAVE_LOCAL_FILES=true
      # Configuración del navegador
      - HEADLESS=true
      # Configuración de ejecución
      # - MAX_DATASETS=5  # Descomentar para testing
      # Base de datos (para futuro uso)
      # - DATABASE_URL=postgresql://user:password@host/dbname?sslmode=require

  # PASO 2: Standardizer - Estandariza nombres de archivos
  standardizer:
    build: .
    container_name: ine-standardizer
    command: python steps/step2_standardize_names.py
    volumes:
      - ./outputs:/app/outputs
      - ./dictionary:/app/dictionary
      - ./steps:/app/steps
      - ./config.py:/app/config.py
    environment:
      - PYTHONUNBUFFERED=1
      - PIPELINE_STAGE=standardized
      - OUTPUT_DIR=/app/outputs
    depends_on:
      scraper:
        condition: service_completed_successfully

  # PASO 3: Column Remover - Elimina columnas flag_codes y flags
  column_remover:
    build: .
    container_name: ine-column-remover
    command: python steps/step3_remove_columns.py
    volumes:
      - ./outputs:/app/outputs
      - ./steps:/app/steps
      - ./config.py:/app/config.py
    environment:
      - PYTHONUNBUFFERED=1
      - PIPELINE_STAGE=columns_removed
      - OUTPUT_DIR=/app/outputs
    depends_on:
      standardizer:
        condition: service_completed_successfully